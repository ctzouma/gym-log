{"version":3,"sources":["header/AppHeader.tsx","Input.tsx","exercise/ExerciseList.tsx","exercise/ExercisePage.tsx","App.tsx","hooks/useLocalStorage.tsx","keys.ts","index.tsx"],"names":["AppHeader","className","Input","onClickAdd","f","buttonLabel","useState","value","setValue","type","onChange","e","target","onClick","ExerciseList","BodyPart","exercises","length","map","exercise","id","name","category","ExercisePage","onAddExercise","CHEST","setCategory","addExercise","find","exerciseExists","ex","v4","history","Object","keys","bp","i","App","key","defaultValue","stored","localStorage","getItem","initial","JSON","parse","useEffect","setItem","stringify","useLocalStorage","setExercises","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAYeA,MAVf,WACI,OACI,wBAAQC,UAAU,aAAlB,SACI,2CCaGC,MAXf,YAAwE,IAAD,IAAvDC,kBAAuD,MAA1C,SAAAC,GAAC,OAAIA,GAAqC,MAAlCC,mBAAkC,MAApB,MAAoB,IACzCC,mBAAS,IADgC,mBAC5DC,EAD4D,KACrDC,EADqD,KAGnE,OACI,qCACI,uBAAOC,KAAK,OAAOF,MAAOA,EAAOG,SAAU,SAACC,GAAD,OAAOH,EAASG,EAAEC,OAAOL,UACpE,wBAAQE,KAAK,SAASI,QAAS,kBAAMV,EAAWI,IAAhD,SAAyDF,Q,QCEtDS,ICJVC,EDIUD,EAXf,YAAwD,IAAhCE,EAA+B,EAA/BA,UACpB,OAAKA,EAAUC,OAEX,mCAEID,EAAUE,KAAI,SAACC,GAAD,OAAc,gCAAwBA,EAASC,GAAjC,MAAwCD,EAASE,KAAjD,MAA0DF,EAASG,WAAzDH,EAASC,SAJzB,M,gBCM7BL,K,cAAAA,E,YAAAA,E,gBAAAA,E,kBAAAA,E,aAAAA,M,KAoCUQ,MA5Bf,YAA+E,IAAxDP,EAAuD,EAAvDA,UAAuD,IAA5CQ,qBAA4C,MAA5B,SAAApB,GAAC,OAAIA,GAAuB,IAC1CE,mBAASS,EAASU,OADwB,mBACnEH,EADmE,KACzDI,EADyD,KAG1E,SAASC,EAAYR,GACjB,GAAIA,EAASF,SAMjB,SAAwBE,GACpB,QAASH,EAAUY,MAAK,SAAAjB,GAAC,OAAIA,EAAEU,OAASF,KAPhBU,CAAeV,GAAW,CAChD,IAAMW,EAAe,CAACV,GAAIW,cAAMV,KAAMF,EAAUG,SAAUA,EAAUU,QAAS,IAC7ER,EAAcM,IAQpB,OACI,qCACI,sBAAK7B,UAAU,gBAAf,UACI,wBAAQM,MAAOe,EAAUZ,SAAU,SAACC,GAAD,OAAOe,EAAYf,EAAEC,OAAOL,QAA/D,SACK0B,OAAOC,KAAKnB,GAAUG,KAAI,SAACiB,EAAIC,GAAL,OAAW,wBAAgB7B,MAAO4B,EAAvB,SAA4BA,GAAfC,QAEvD,cAAC,EAAD,CAAOjC,WAAY,SAACgB,GAAD,OAAsBQ,EAAYR,IAAWd,YAAY,oBAEhF,cAAC,EAAD,CAAcW,UAAWA,Q,MCxBtBqB,MAXf,WAAgB,IAAD,ECJgB,SAAMC,EAAaC,GAC9C,IAAMC,EAASC,aAAaC,QAAQJ,GAC9BK,EAAUH,EAASI,KAAKC,MAAML,GAAUD,EAF8C,EAGlEjC,mBAASqC,GAHyD,mBAGrFpC,EAHqF,KAG9EC,EAH8E,KAS5F,OAJAsC,qBAAU,WACNL,aAAaM,QAAQT,EAAKM,KAAKI,UAAUzC,MAC1C,CAAC+B,EAAK/B,IAEF,CAACA,EAAOC,GDJiByC,CEPL,SFOkD,IADlE,mBACNjC,EADM,KACKkC,EADL,KAGb,OACE,sBAAKjD,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAce,UAAWA,EAAWQ,cAAe,SAAAM,GAAE,OAAIoB,EAAa,GAAD,mBAAKlC,GAAL,CAAgBc,YGP3FqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.11560e47.chunk.js","sourcesContent":["import './AppHeader.scss';\n\nfunction AppHeader() {\n    return (\n        <header className=\"App-header\">\n            <h2>\n            gTrack\n            </h2>\n        </header>\n    )\n}\n\nexport default AppHeader;","import { useState } from 'react';\n\ntype InputProps = {\n    onClickAdd?: (f: any) => any;\n    buttonLabel?: string;\n}\n\nfunction Input({onClickAdd = f => f, buttonLabel = \"Add\"}: InputProps) {\n    const [value, setValue] = useState('');\n\n    return (\n        <>\n            <input type=\"text\" value={value} onChange={(e) => setValue(e.target.value)}></input>\n            <button type=\"button\" onClick={() => onClickAdd(value)}>{buttonLabel}</button>\n        </>\n    );\n}\n\nexport default Input;","type ExerciseListProps = {\n    exercises: Exercise[];\n}\n\nfunction ExerciseList ({exercises}: ExerciseListProps) {\n    if (!exercises.length) return null;\n    return (\n        <>\n            {\n            exercises.map((exercise) => <div key={exercise.id}>{exercise.id} - {exercise.name} - {exercise.category}</div>)\n            }\n        </>\n    );\n}\n\nexport default ExerciseList;","import { useState } from 'react';\nimport Input from '../Input';\nimport { v4 } from 'uuid';\nimport ExerciseList from './ExerciseList';\nimport './ExercisePage.scss';\n\ntype ExercisePageProps = {\n    onAddExercise?: (f: Exercise) => void;\n    exercises: Exercise[];\n}\n\nenum BodyPart {\n    CHEST = 'CHEST',\n    BACK = 'BACK',\n    BICEPS = 'BICEPS',\n    TRICEPS = 'TRICPES',\n    LEGS = 'LEGS'\n}\n\nfunction ExercisePage({exercises, onAddExercise = f => f}: ExercisePageProps) {\n    const [category, setCategory] = useState(BodyPart.CHEST);\n\n    function addExercise(exercise: string): void {\n        if (exercise.length && !exerciseExists(exercise)) {\n          const ex: Exercise = {id: v4(), name: exercise, category: category, history: []};\n          onAddExercise(ex);\n        }\n    }\n    \n    function exerciseExists(exercise: string): boolean {\n        return !!exercises.find(e => e.name === exercise);\n    }\n\n    return (\n        <>\n            <div className=\"ex-input-cont\">\n                <select value={category} onChange={(e) => setCategory(e.target.value as BodyPart)}>\n                    {Object.keys(BodyPart).map((bp, i) => <option key={i} value={bp}>{bp}</option>)}\n                </select>\n                <Input onClickAdd={(exercise: string) => addExercise(exercise)} buttonLabel=\"Add Exercise\"/>\n            </div> \n            <ExerciseList exercises={exercises}></ExerciseList>\n        </>\n    )\n    \n}\n\nexport default ExercisePage;","import AppHeader from './header/AppHeader'\nimport ExercisePage from './exercise/ExercisePage';\nimport { useLocalStorage } from './hooks/useLocalStorage';\nimport { exerciseListKey } from './keys';\nimport './App.scss';\n\nfunction App() {\n  const [exercises, setExercises] = useLocalStorage<Exercise[]>(exerciseListKey, []);\n\n  return (\n    <div className=\"App\">\n      <AppHeader></AppHeader>\n      <ExercisePage exercises={exercises} onAddExercise={ex => setExercises([...exercises, ex])}></ExercisePage>\n    </div>\n  );\n}\n\nexport default App;\n","import { useState, useEffect } from \"react\";\n\nexport const useLocalStorage = <T, >(key: string, defaultValue: T): [T, React.Dispatch<any>] => {\n    const stored = localStorage.getItem(key);\n    const initial = stored ? JSON.parse(stored) : defaultValue;\n    const [value, setValue] = useState(initial);\n\n    useEffect(() => {\n        localStorage.setItem(key, JSON.stringify(value));\n    }, [key, value]);\n\n    return [value, setValue];\n}","export const exerciseListKey = \"exList\";\nexport const workoutListKey = \"wkoutList\";","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}